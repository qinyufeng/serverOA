<?xml version="1.0" encoding="UTF-8"?>
<!--
    Repository and Service layers
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
		
	<!-- enables scanning for @Transactional annotations -->
    <tx:annotation-driven />
	<!-- 设置使用注解的类所在的jar包 -->
	<context:component-scan base-package="com.jgonet">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!--加载配置文件-->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="clientDBread" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="driverClassName" value="${mysqljdbc.driverClassName}" />
		<property name="url" value="${mysqljdbc.url}" />
		<property name="username" value="${mysqljdbc.username}" />
		<property name="password" value="${mysqljdbc.password}" />
		<!-- 初始化时建立物理连接的个数-->
		<property name="initialSize" value="${jdbc.initialSize}" />
		<!-- 最小连接池数量 -->
		<property name="minIdle" value="${jdbc.minIdle}" />
		<!-- 最大连接池数量 -->
		<property name="maxActive" value="${jdbc.maxActive}" />
		<!-- 配置获取连接等待超时的时间   单位 6000毫秒/1000等于6秒 -->
		<property name="maxWait" value="${jdbc.maxWait}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<!-- 用来检测连接是否有效的sql -->
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<!--
			建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
		-->
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
		<!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
		<!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
		<property name="testOnReturn" value="${jdbc.testOnReturn}" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${jdbc.maxPoolPreparedStatementPerConnectionSize}" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="${jdbc.filters}" />
		<!--合并多个DruidDataSource的监控数据-->
		<property name="useGlobalDataSourceStat" value="true" />
		<!-- 超过时间限制是否回收 -->  
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<!-- 超时时间；单位为秒。180秒=3分钟 -->  
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />  
		<!-- 关闭abanded连接时输出错误日志 -->  
		<property name="logAbandoned" value="${jdbc.logAbandoned}" />  
	</bean>

	
	<bean id="ptJdbcTemplatewrite" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="clientDBread" />
	</bean>
</beans>