mysqljdbc.driverClassName=com.mysql.jdbc.Driver
mysqljdbc.url=jdbc:mysql://127.0.0.1:3306/oa?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull
mysqljdbc.username=root
mysqljdbc.password=root


jdbc.initialSize=5
#最大连接池数量
jdbc.maxActive=10
#最小连接池数量
jdbc.minIdle=5
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁
jdbc.maxWait=30000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
jdbc.timeBetweenEvictionRunsMillis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
jdbc.minEvictableIdleTimeMillis=3000000
#用来检测连接是否有效的sql
jdbc.validationQuery=select 1 from dual
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有�?
jdbc.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能�?
jdbc.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
jdbc.testOnReturn=false
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql5.5以下的版本中没有PSCache功能，建议关闭掉�?.5及以上版本有PSCache，建议开启�?
jdbc.poolPreparedStatements=true
jdbc.maxPoolPreparedStatementPerConnectionSize=20
#配置监控统计拦截的filters
jdbc.filters=mergeStat
#\u8D85\u8FC7\u65F6\u95F4\u9650\u5236\u662F\u5426\u56DE\u6536
jdbc.removeAbandoned=true
#\u8D85\u65F6\u65F6\u95F4\uFF1B\u5355\u4F4D\u4E3A\u79D2\u3002180\u79D2=3\u5206\u949F
jdbc.removeAbandonedTimeout=180
#\u5173\u95EDabanded\u8FDE\u63A5\u65F6\u8F93\u51FA\u9519\u8BEF\u65E5\u5FD7
jdbc.logAbandoned=true



#\u53EF\u7528\u8FDE\u63A5\u5B9E\u4F8B\u7684\u6700\u5927\u6570\u76EE\uFF0C\u9ED8\u8BA4\u503C\u4E3A8
redis.conf.maxActive=1024
#\u6700\u5927\u7A7A\u95F2\u94FE\u63A5
redis.conf.maxIdle=200
#\u7B49\u5F85\u53EF\u7528\u8FDE\u63A5\u7684\u6700\u5927\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2,\u9ED8\u8BA4\u503C\u4E3A-1\uFF0C\u8868\u793A\u6C38\u4E0D\u8D85\u65F6\u3002\u5982\u679C\u8D85\u8FC7\u7B49\u5F85\u65F6\u95F4\uFF0C\u5219\u76F4\u63A5\u629B\u51FAJedisConnectionException\uFF1B
redis.conf.maxWait=10000
#\u5728borrow\u4E00\u4E2Ajedis\u5B9E\u4F8B\u65F6\uFF0C\u662F\u5426\u63D0\u524D\u8FDB\u884Cvalidate\u64CD\u4F5C\uFF1B\u5982\u679C\u4E3Atrue\uFF0C\u5219\u5F97\u5230\u7684jedis\u5B9E\u4F8B\u5747\u662F\u53EF\u7528\u7684\uFF1B
redis.conf.testOnBorrow = true
#redis\u7684\u670D\u52A1\u7AEFip
redis.host=127.0.0.1
#redis\u7684\u670D\u52A1\u7AEF\u7684\u7AEF\u53E3
redis.port=6379
